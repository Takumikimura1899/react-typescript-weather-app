{"version":3,"sources":["components/Title.tsx","components/Form.tsx","components/Results.tsx","components/Loading.tsx","App.tsx","index.tsx"],"names":["Title","Form","city","setCity","getWeather","onSubmit","type","name","placeholder","onChange","e","target","value","Results","results","cityName","country","temperature","conditionText","icon","className","src","alt","Loading","App","useState","loading","setLoading","setResults","preventDefault","fetch","then","res","json","data","location","current","temp_c","condition","text","catch","err","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAIeA,EAJD,WACZ,OAAO,mFCsBMC,EAdF,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,WAC7B,OACE,uBAAMC,SAAUD,EAAhB,UACE,uBACEE,KAAK,OACLC,KAAK,OACLC,YAAY,qBACZC,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOC,QAClCA,MAAOV,IAET,wBAAQI,KAAK,SAAb,6BC8BSO,EAvCC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,QACTC,EAAwDD,EAAxDC,SAAUC,EAA8CF,EAA9CE,QAASC,EAAqCH,EAArCG,YAAaC,EAAwBJ,EAAxBI,cAAeC,EAASL,EAATK,KACvD,OACE,qCACGJ,GACC,sBAAKK,UAAU,eAAf,UACE,uDACCL,KAIJC,GACC,sBAAKI,UAAU,kBAAf,UACE,iDACCJ,KAIJC,GACC,sBAAKG,UAAU,eAAf,UACE,iDACCH,EACD,6CAIHC,GACC,sBAAKE,UAAU,oBAAf,UACE,iDACA,gCACE,qBAAKC,IAAKF,EAAMG,IAAI,SACpB,+BAAOJ,cCvCJK,EAFC,kBAAM,qBAAKH,UAAU,a,MCgEtBI,MAjDf,WAAgB,IAAD,EACiBC,oBAAkB,GADnC,mBACNC,EADM,KACGC,EADH,OAEWF,mBAAiB,IAF5B,mBAENvB,EAFM,KAEAC,EAFA,OAGiBsB,mBAA2B,CACvDT,QAAS,GACTD,SAAU,GACVE,YAAa,GACbC,cAAe,GACfC,KAAM,KARK,mBAGNL,EAHM,KAGGc,EAHH,KAsCb,OACE,qBAAKR,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMlB,KAAMA,EAAMC,QAASA,EAASC,WAhCvB,SAACM,GAClBA,EAAEmB,iBACFF,GAAW,GAGXG,MAAM,mFAAD,OACgF5B,EADhF,YAIF6B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAElBF,MAAK,SAACG,GACLN,EAAW,CACTZ,QAASkB,EAAKC,SAASnB,QACvBD,SAAUmB,EAAKC,SAAS5B,KACxBU,YAAaiB,EAAKE,QAAQC,OAC1BnB,cAAegB,EAAKE,QAAQE,UAAUC,KACtCpB,KAAMe,EAAKE,QAAQE,UAAUnB,OAE/BhB,EAAQ,IACRwB,GAAW,MAEZa,OAAM,SAACC,GAAD,OACLC,MACE,4NASDhB,EAAU,cAAC,EAAD,IAAc,cAAC,EAAD,CAASZ,QAASA,UCtDnD6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f6abf24e.chunk.js","sourcesContent":["const Title = () => {\n  return <h1>ワールドウェザー</h1>;\n};\n\nexport default Title;\n","// import React, { useState } from \"react\";\n\ntype FormPropsType = {\n  city: string;\n  setCity: React.Dispatch<React.SetStateAction<string>>;\n  //   React.FormEvent<HTMLFormElement>はReactが定義している型\n  getWeather: (e: React.FormEvent<HTMLFormElement>) => void;\n};\n\nconst Form = ({ city, setCity, getWeather }: FormPropsType) => {\n  return (\n    <form onSubmit={getWeather}>\n      <input\n        type=\"text\"\n        name=\"city\"\n        placeholder=\"都市名\"\n        onChange={(e) => setCity(e.target.value)}\n        value={city}\n      />\n      <button type=\"submit\">Get Weather</button>\n    </form>\n  );\n};\nexport default Form;\n","type ResultsPropsType = {\n  results: {\n    country: string;\n    cityName: string;\n    temperature: string;\n    conditionText: string;\n    icon: string;\n  };\n};\n\nconst Results = ({ results }: ResultsPropsType) => {\n  const { cityName, country, temperature, conditionText, icon } = results;\n  return (\n    <>\n      {cityName && (\n        <div className=\"results-city\">\n          <span>都市名:</span>\n          {cityName}\n        </div>\n      )}\n\n      {country && (\n        <div className=\"results-country\">\n          <span>国名:</span>\n          {country}\n        </div>\n      )}\n\n      {temperature && (\n        <div className=\"results-temp\">\n          <span>気温:</span>\n          {temperature}\n          <span>℃</span>\n        </div>\n      )}\n\n      {conditionText && (\n        <div className=\"results-condition\">\n          <span>天気:</span>\n          <div>\n            <img src={icon} alt=\"icon\" />\n            <span>{conditionText}</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Results;\n","const Loading = () => <div className=\"loading\"></div>;\n\nexport default Loading;\n","import React, { useState } from \"react\";\nimport Title from \"./components/Title\";\nimport Form from \"./components/Form\";\nimport Results from \"./components/Results\";\nimport Loading from \"./components/Loading\";\nimport \"./App.css\";\n\ntype ResultsStateType = {\n  country: string;\n  cityName: string;\n  temperature: string;\n  conditionText: string;\n  icon: string;\n};\n\nfunction App() {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [city, setCity] = useState<string>(\"\");\n  const [results, setResults] = useState<ResultsStateType>({\n    country: \"\",\n    cityName: \"\",\n    temperature: \"\",\n    conditionText: \"\",\n    icon: \"\",\n  });\n  const getWeather = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoading(true);\n    //   fetchはAPIコールと呼ばれる\n    // .thenでAPIにデータを送った後の処理 resはresponseの略でAPIから送り返された気象データが入っている\n    fetch(\n      `http://api.weatherapi.com/v1/current.json?key=3995ce571ca747d8a7e195724212106&q=${city}&aqi=no`\n    )\n      // resをjson形式に変換\n      .then((res) => res.json())\n      //   dataにJSON形式のデータが入ってる\n      .then((data) => {\n        setResults({\n          country: data.location.country,\n          cityName: data.location.name,\n          temperature: data.current.temp_c,\n          conditionText: data.current.condition.text,\n          icon: data.current.condition.icon,\n        });\n        setCity(\"\");\n        setLoading(false);\n      })\n      .catch((err) =>\n        alert(\n          \"エラーが発生しました。ページをリロードしてもう一度トライしてください。\"\n        )\n      );\n  };\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <Title />\n        <Form city={city} setCity={setCity} getWeather={getWeather} />\n        {loading ? <Loading /> : <Results results={results} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}